version: '2'

services:

  redis:
    image: redis:6.0.6
    ports:
      - 6379:6379
    volumes:
      - ./volumes/redis:/data

  app:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    ports:
      - 8000:8000
    env_file:
      - ./env/app_docker
    volumes:
      - ./app/:/code
      - ./volumes/static:/static
      - ./volumes/media:/media
    depends_on:
      - redis
      - db

  # nginx:
  #   build:
  #     context: .
  #     dockerfile: ./docker/nginx/Dockerfile
  #   command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  #   volumes:
  #     - ./volumes/static:/static
  #     - ./volumes/media:/media
  #     - ./volumes/certbot/conf:/etc/letsencrypt
  #     - ./volumes/certbot/www:/var/www/certbot
  #   ports:
  #     - 80:80
  #     - 443:443
  #   depends_on:
  #     - app

  db:
    image: postgres:14.3
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=commerce
    ports:
      - 5432:5432
    volumes:
      - ./volumes/db:/var/lib/postgresql/data

  # certbot:
  #   image: certbot/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  #   volumes:
  #     - ./volumes/certbot/conf:/etc/letsencrypt
  #     - ./volumes/certbot/www:/var/www/certbot
      
  # db-backups:
  #   image: prodrigestivill/postgres-backup-local
  #   restart: always
  #   volumes:
  #     - ./volumes/backups:/backups
  #   links:
  #     - db:db
  #   depends_on:
  #     - db
  #   environment:
  #     - POSTGRES_USER=admin
  #     - POSTGRES_PASSWORD=admin
  #     - POSTGRES_DB=commerce
  #     - POSTGRES_HOST=db
  #     - POSTGRES_EXTRA_OPTS=-Z9 --schema=public --blobs
  #     - SCHEDULE=@daily
  #     - BACKUP_KEEP_DAYS=7
  #     - BACKUP_KEEP_WEEKS=4
  #     - BACKUP_KEEP_MONTHS=6
  #     - HEALTHCHECK_PORT=81

  